name: pttgc-devops-lab09
on:
  push:
    branches:
      - main

jobs:

  unittest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: './src/go.mod'
      - run: go mod tidy
        working-directory: ./src
      - run: go test ./...
        working-directory: ./src
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version-file: './src/go.mod'
      - run: go mod tidy
        working-directory: ./src
        name: Download libraries
      - run: go test -coverprofile coverage.out ./...
        working-directory: ./src
        name: Code Coverage Checking
      - run: go tool cover -func coverage.out -o coverage.txt
        working-directory: ./src
        name: Convert Code Coverage Report format
      - uses: actions/upload-artifact@v3
        name: Store code coverage report 
        with:
          name: code-coverage-report
          path: src/coverage.txt
  
  code-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'
      - uses: actions/upload-artifact@v3
        with:
          name: code-scan-result
          path: trivy-results.sarif

  quality-gate:
    runs-on: ubuntu-latest
    needs: ["coverage", "unittest"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: code-coverage-report
          path: ./src
      - run: python coverage.py 1
        working-directory: ./src
        name: Simple Quality Gate
  
  docker-build:
    name: Login
    needs: [quality-gate]
    runs-on: ubuntu-latest
    steps:
  
      - name: 'Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
    
      - uses: actions/checkout@v3

      - name: Build an image from Dockerfile
        run: |
              docker build . --file Dockerfile --tag ${{ secrets.REGISTRY_LOGIN_SERVER }}/demo:${{ github.sha }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ secrets.REGISTRY_LOGIN_SERVER }}/demo:${{ github.sha }}'
          format: 'table'
          ignore-unfixed: true
          vuln-type: 'os,library'
          security-checks: 'vuln'
          output: 'trivy-results.sarif'
      - uses: actions/upload-artifact@v3
        with:
          name: code-scan-result
          path: trivy-results.sarif
      
      - name: Push an image to ACR
        run: |
              docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/demo:${{ github.sha }}

        
